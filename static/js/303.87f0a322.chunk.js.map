{"version":3,"file":"static/js/303.87f0a322.chunk.js","mappings":"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","sources":["components/APIServices/APIServices.jsx","components/ErrorView/ErrorView.styled.js","components/ErrorView/ErrorView.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/Pages/ReviewsPage.jsx","components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60bdd84997c9f2a4c6cd2341c547ed98';\nconst REQUEST = {\n  trendingMovies: '/trending/movie/day',\n  moviesByQuery: '/search/movie',\n  movie: '/movie',\n  credits: '/credits',\n  reviews: '/reviews',\n  lang: 'language=en-US',\n  restrictions: 'include_adult=false',\n};\n\nexport const requestTrendingMovies = async page => {\n  const trendingMoviesResponse = await axios.get(\n    `${URL}${REQUEST.trendingMovies}?api_key=${API_KEY}&page=${page}&${REQUEST.restrictions}`\n  );\n\n  const { data } = trendingMoviesResponse;\n\n  return data;\n};\n\nexport const requestMoviesByQuery = async (query, page) => {\n  // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n  const moviesByQueryResponse = await axios.get(\n    `${URL}${REQUEST.moviesByQuery}?api_key=${API_KEY}&${REQUEST.lang}&${REQUEST.restrictions}&query=${query}&page=${page}`\n  );\n\n  const { data } = moviesByQueryResponse;\n\n  return data;\n};\n\nexport const requestMovieInfo = async id => {\n  // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const movieInfoResponse = await axios.get(\n    `${URL}${REQUEST.movie}/${id}?api_key=${API_KEY}&${REQUEST.lang}`\n  );\n\n  const { data } = movieInfoResponse;\n\n  return data;\n};\n\nexport const requestMovieCredits = async id => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  const moviesCreditsResponse = await axios.get(\n    `${URL}${REQUEST.movie}/${id}${REQUEST.credits}?api_key=${API_KEY}&${REQUEST.lang}`\n  );\n\n  const { data } = moviesCreditsResponse;\n  const moviesCreditsArr = data.cast;\n  return moviesCreditsArr;\n};\n\nexport const requestMovieReviews = async (id, page = 1) => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const movieReviewsResponse = await axios.get(\n    `${URL}${REQUEST.movie}/${id}${REQUEST.reviews}?api_key=${API_KEY}&${REQUEST.lang}&page=${page}`\n  );\n\n  const { data } = movieReviewsResponse;\n\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const StyledErrorView = styled.div`\n  position: absolute;\n  bottom: 10;\n  left: 50%;\n  transform: translate(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & img {\n    width: 300px;\n    height: auto;\n    margin-bottom: 15px;\n  }\n\n  & p {\n    font-size: 18px;\n    color: #34495e;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport errorImg from '../../images/errorImg.jpeg';\nimport { StyledErrorView } from './ErrorView.styled';\n\nexport const ErrorView = ({ message }) => {\n  return (\n    <StyledErrorView>\n      <img src={errorImg} alt=\"red button\" width=\"300\" />\n      <p>{message}</p>\n    </StyledErrorView>\n  );\n};\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  display: flex;\n  justify-content: center;\n\n  .lds-ellipsis {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-ellipsis div {\n    position: absolute;\n    top: 33px;\n    width: 13px;\n    height: 13px;\n    border-radius: 50%;\n    background: #5e87b8;\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n  }\n  .lds-ellipsis div:nth-child(1) {\n    left: 8px;\n    animation: lds-ellipsis1 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(2) {\n    left: 8px;\n    animation: lds-ellipsis2 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(3) {\n    left: 32px;\n    animation: lds-ellipsis2 0.6s infinite;\n  }\n  .lds-ellipsis div:nth-child(4) {\n    left: 56px;\n    animation: lds-ellipsis3 0.6s infinite;\n  }\n  @keyframes lds-ellipsis1 {\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n  @keyframes lds-ellipsis3 {\n    0% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(0);\n    }\n  }\n  @keyframes lds-ellipsis2 {\n    0% {\n      transform: translate(0, 0);\n    }\n    100% {\n      transform: translate(24px, 0);\n    }\n  }\n`;\n","import { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <div className=\"lds-ellipsis\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledReviews = styled.ul`\n  margin: 0;\n  padding-left: 50px;\n  padding-bottom: 50px;\n  list-style: square;\n  text-align: justify;\n\n  & p {\n    font-style: italic;\n    color: #22313f;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledReviews } from './Reviews.styled';\n\nexport const Reviews = ({ reviewsInfo }) => {\n  return (\n    <StyledReviews>\n      {reviewsInfo.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h4>{author}</h4>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </StyledReviews>\n  );\n};\n\nReviews.propTypes = {\n  reviewsInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { requestMovieReviews } from '../APIServices/APIServices';\nimport { Reviews } from '../Reviews/Reviews.jsx';\nimport { Loader } from '../Loader/Loader';\nimport { ErrorView } from '../ErrorView/ErrorView';\nimport { PaginationContainer } from '../Pagination/Pagination.jsx';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const page = new URLSearchParams(location.search).get('page') ?? 1;\n\n  useEffect(() => {\n    setStatus('pending');\n    const fetchMovieReviews = async movieId => {\n      try {\n        const { results, total_pages } = await requestMovieReviews(movieId);\n\n        if (results.length === 0) {\n          toast.warning('Sorry, no results found', {\n            toastId: 'error',\n          });\n          setStatus('idle');\n          return;\n        }\n\n        setReviews(results);\n        setTotalPages(total_pages);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setError(`❌ ${error.message}`);\n        setStatus('rejected');\n      }\n    };\n    fetchMovieReviews(movieId);\n    onScrollPage();\n  }, [movieId]);\n\n  const onHandlePage = (event, page) => {\n    navigate({ ...location, search: `page=${page}` });\n  };\n\n  const onScrollPage = () => {\n    // setTimeout(() => {\n    window.scrollBy({\n      top: document.documentElement.clientHeight - 160,\n      behavior: 'smooth',\n    });\n    // }, 1000);\n  };\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n\n      {status === 'rejected' && <ErrorView message={error} />}\n\n      {status === 'resolved' && <Reviews reviewsInfo={reviews} />}\n      <ToastContainer\n        autoClose={3000}\n        theme={'colored'}\n        position=\"bottom-center\"\n        limit={1}\n      />\n      {totalPages > 1 && (\n        <PaginationContainer\n          count={totalPages}\n          onChange={onHandlePage}\n          page={Number(page)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import styled from 'styled-components';\n\nexport const StyledPagination = styled.div`\n  // margin-right: auto;\n  // margin-left: auto;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n","import { Pagination } from '@mui/material';\n\nimport { StyledPagination } from './Pagination.styled';\n\nexport const PaginationContainer = ({ count, page, onChange }) => {\n  return (\n    <StyledPagination>\n      <Pagination\n        count={count}\n        onChange={onChange}\n        page={page}\n        showFirstButton\n        showLastButton\n        size=\"large\"\n      />\n    </StyledPagination>\n  );\n};\n"],"names":["URL","API_KEY","REQUEST","requestTrendingMovies","page","axios","trendingMoviesResponse","data","requestMoviesByQuery","query","moviesByQueryResponse","requestMovieInfo","id","movieInfoResponse","requestMovieCredits","moviesCreditsResponse","moviesCreditsArr","cast","requestMovieReviews","movieReviewsResponse","StyledErrorView","styled","ErrorView","message","src","errorImg","alt","width","StyledLoader","Loader","className","StyledReviews","Reviews","reviewsInfo","map","author","content","useState","reviews","setReviews","totalPages","setTotalPages","status","setStatus","error","setError","movieId","useParams","navigate","useNavigate","location","useLocation","URLSearchParams","search","get","useEffect","fetchMovieReviews","results","total_pages","length","toast","toastId","console","log","onScrollPage","window","scrollBy","top","document","documentElement","clientHeight","behavior","autoClose","theme","position","limit","Pagination","count","onChange","event","Number","StyledPagination","PaginationContainer","showFirstButton","showLastButton","size"],"sourceRoot":""}