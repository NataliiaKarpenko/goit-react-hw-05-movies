{"version":3,"file":"static/js/608.8d3323e8.chunk.js","mappings":"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","sources":["components/APIServices/APIServices.jsx","components/ErrorView/ErrorView.styled.js","components/ErrorView/ErrorView.jsx","components/Moviedetails/MovieDetails.styled.js","components/Moviedetails/MovieDetails.jsx","components/Pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60bdd84997c9f2a4c6cd2341c547ed98';\nconst REQUEST = {\n  trendingMovies: '/trending/movie/day',\n  moviesByQuery: '/search/movie',\n  movie: '/movie',\n  credits: '/credits',\n  reviews: '/reviews',\n  lang: 'language=en-US',\n  restrictions: 'include_adult=false',\n};\n\nexport const requestTrendingMovies = async page => {\n  const trendingMoviesResponse = await axios.get(\n    `${URL}${REQUEST.trendingMovies}?api_key=${API_KEY}&page=${page}&${REQUEST.restrictions}`\n  );\n\n  const { data } = trendingMoviesResponse;\n\n  return data;\n};\n\nexport const requestMoviesByQuery = async (query, page) => {\n  // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n  const moviesByQueryResponse = await axios.get(\n    `${URL}${REQUEST.moviesByQuery}?api_key=${API_KEY}&${REQUEST.lang}&${REQUEST.restrictions}&query=${query}&page=${page}`\n  );\n\n  const { data } = moviesByQueryResponse;\n\n  return data;\n};\n\nexport const requestMovieInfo = async id => {\n  // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const movieInfoResponse = await axios.get(\n    `${URL}${REQUEST.movie}/${id}?api_key=${API_KEY}&${REQUEST.lang}`\n  );\n\n  const { data } = movieInfoResponse;\n\n  return data;\n};\n\nexport const requestMovieCredits = async id => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n  const moviesCreditsResponse = await axios.get(\n    `${URL}${REQUEST.movie}/${id}${REQUEST.credits}?api_key=${API_KEY}&${REQUEST.lang}`\n  );\n\n  const { data } = moviesCreditsResponse;\n  const moviesCreditsArr = data.cast;\n  return moviesCreditsArr;\n};\n\nexport const requestMovieReviews = async (id, page = 1) => {\n  // https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const movieReviewsResponse = await axios.get(\n    `${URL}${REQUEST.movie}/${id}${REQUEST.reviews}?api_key=${API_KEY}&${REQUEST.lang}&page=${page}`\n  );\n\n  const { data } = movieReviewsResponse;\n\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const StyledErrorView = styled.div`\n  position: absolute;\n  bottom: 10;\n  left: 50%;\n  transform: translate(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & img {\n    width: 300px;\n    height: auto;\n    margin-bottom: 15px;\n  }\n\n  & p {\n    font-size: 18px;\n    color: #34495e;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport errorImg from '../../images/errorImg.jpeg';\nimport { StyledErrorView } from './ErrorView.styled';\n\nexport const ErrorView = ({ message }) => {\n  return (\n    <StyledErrorView>\n      <img src={errorImg} alt=\"red button\" width=\"300\" />\n      <p>{message}</p>\n    </StyledErrorView>\n  );\n};\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieDetails = styled.div`\n  padding-bottom: 40px;\n\n  & .MainInfoContainer {\n    display: flex;\n    gap: 30px;\n  }\n\n  & img {\n    display: block;\n    height: auto;\n    border-radius: 5px;\n  }\n\n  & .InfoContainer {\n    color: #22313f;\n  }\n\n  & p {\n    font-size: 20px;\n  }\n\n  & .AdditionalInfoContainer {\n    color: #22313f;\n  }\n\n  & .Link {\n    color: #113f67;\n    font-size: 18px;\n    text-decoration: none;\n  }\n\n  & .Link:hover {\n    color: #142d4c;\n    text-decoration: underline;\n  }\n\n  & .Link.active {\n    color: #ec729c;\n  }\n\n  & .Link.active:hover {\n    text-decoration: none;\n    cursor: default;\n  }\n\n  & .FirstLink {\n    margin-bottom: 15px;\n  }\n\n  & .Genres {\n    display: flex;\n    gap: 15px;\n  }\n\n  & button {\n    margin-bottom: 20px;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    padding-left: 15px;\n    padding-right: 15px;\n    color: #113f67;\n    border: 1px solid #113f67;\n    border-radius: 5px;\n  }\n\n  & button:hover {\n    scale: 1.05;\n  }\n`;\n","import { NavLink, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { StyledMovieDetails } from './MovieDetails.styled';\nimport imgNotAvailable from '../../images/imgNotAvailable.jpeg';\n\nexport const MovieDetails = ({ movieDetails }) => {\n  const { poster_path, title, releaseYear, voteAverage, overview, genres } =\n    movieDetails;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backlinkHref = location.state?.from ?? '/movies';\n\n  const handleBtnClick = () => {\n    navigate(backlinkHref ?? '/');\n  };\n\n  return (\n    <StyledMovieDetails>\n      <button onClick={handleBtnClick} type=\"button\">\n        👈 Go back\n      </button>\n      <div className=\"MainInfoContainer\">\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : imgNotAvailable\n          }\n          alt={title}\n        />\n        <div className=\"InfoContainer\">\n          <h1>\n            {title} ({releaseYear})\n          </h1>\n          <p>User Score: {voteAverage}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p className=\"Genres\">\n            {genres.map(({ id, name }) => (\n              <span key={id}>{name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"AdditionalInfoContainer\">\n        <h3>Addditional information</h3>\n        <ul>\n          <li className=\"FirstLink\">\n            <NavLink\n              state={{ from: location.state?.from }}\n              to=\"cast\"\n              className=\"Link\"\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              state={{ from: location.state?.from }}\n              to=\"reviews\"\n              className=\"Link\"\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </StyledMovieDetails>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieDetails: PropTypes.shape({\n    src: PropTypes.string,\n    title: PropTypes.string,\n    releaseYear: PropTypes.number,\n    voteAverage: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { MovieDetails } from '../Moviedetails/MovieDetails';\nimport { requestMovieInfo } from '../APIServices/APIServices';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorView } from 'components/ErrorView/ErrorView';\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState({\n    poster_path: '',\n    title: '',\n    releaseYear: 0,\n    voteAverage: 0,\n    overview: '',\n    genres: [],\n  });\n\n  // const [movieDetails, setMovieDetails] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieInfo = async movieId => {\n      try {\n        setStatus('pending');\n\n        const {\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        } = await requestMovieInfo(movieId);\n\n        setMovieDetails({\n          poster_path: poster_path,\n          title,\n          releaseYear: new Date(release_date).getFullYear(),\n          voteAverage: Math.round(vote_average * 10),\n          overview,\n          genres,\n        });\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error.message);\n        setError(`❌${error.message}. Try again later, please.`);\n        setStatus('rejected');\n      }\n    };\n    fetchMovieInfo(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <MovieDetails movieDetails={movieDetails} />}\n      {status === 'rejected' && <ErrorView message={error} />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["URL","API_KEY","REQUEST","requestTrendingMovies","page","axios","trendingMoviesResponse","data","requestMoviesByQuery","query","moviesByQueryResponse","requestMovieInfo","id","movieInfoResponse","requestMovieCredits","moviesCreditsResponse","moviesCreditsArr","cast","requestMovieReviews","movieReviewsResponse","StyledErrorView","styled","ErrorView","message","src","errorImg","alt","width","StyledMovieDetails","MovieDetails","movieDetails","poster_path","title","releaseYear","voteAverage","overview","genres","location","useLocation","navigate","useNavigate","backlinkHref","state","from","onClick","type","className","imgNotAvailable","map","name","to","useState","setMovieDetails","error","setError","status","setStatus","movieId","useParams","useEffect","fetchMovieInfo","release_date","vote_average","Date","getFullYear","Math","round","console","log","Loader"],"sourceRoot":""}